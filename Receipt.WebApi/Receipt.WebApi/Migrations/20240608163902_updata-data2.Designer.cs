// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Receipt.WebApi.Data;

#nullable disable

namespace Receipt.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240608163902_updata-data2")]
    partial class updatadata2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Receipt.WebApi.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VarChar")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.ToTable("Items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InStock = 50,
                            Name = "Phone",
                            Price = 699m
                        },
                        new
                        {
                            Id = 2,
                            InStock = 30,
                            Name = "Laptop",
                            Price = 999m
                        },
                        new
                        {
                            Id = 3,
                            InStock = 40,
                            Name = "Tablet",
                            Price = 399m
                        },
                        new
                        {
                            Id = 4,
                            InStock = 20,
                            Name = "Camera",
                            Price = 299m
                        },
                        new
                        {
                            Id = 5,
                            InStock = 70,
                            Name = "Headset",
                            Price = 59m
                        },
                        new
                        {
                            Id = 6,
                            InStock = 100,
                            Name = "Mouse",
                            Price = 29m
                        },
                        new
                        {
                            Id = 7,
                            InStock = 80,
                            Name = "Keyboard",
                            Price = 49m
                        },
                        new
                        {
                            Id = 8,
                            InStock = 25,
                            Name = "Monitor",
                            Price = 199m
                        },
                        new
                        {
                            Id = 9,
                            InStock = 15,
                            Name = "Printer",
                            Price = 89m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
